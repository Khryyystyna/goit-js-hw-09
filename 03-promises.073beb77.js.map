{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAYA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACCF,EAAQ,CAACH,WAAUC,UAErBG,EAAO,CAACJ,WAAUC,YAEpBA,OAnBM,CACXQ,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASG,kBAAkB,SACvCC,UAAWJ,SAASG,kBAAkB,QACtCE,YAAaL,SAASG,kBAAkB,UACxCG,UAAWN,SAASC,cAAc,YAG/BF,KAAKQ,iBAAiB,UAe3B,SAA2BC,GACzBA,EAAIC,iBAOJ,IANA,IAEqBC,EAAjBF,EAAIG,cADNC,SAAYC,EAAKH,EAALnB,MAAOuB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAEvBC,EAAUC,OAAOJ,EAAMK,OACvBC,EAASF,OAAOH,EAAKI,OACrBE,EAAWH,OAAOF,EAAOG,OACpBG,EAAW,EAAGA,GAAYD,EAAUC,GAAY,EACvDhC,EAAcgC,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGjC,EAAQiC,EAARjC,SAAUC,EAAKgC,EAALhC,MACpBiC,EAAArC,GAASsC,OAAOC,QAAQ,wCAAuDC,OAAfrC,EAAS,QAAYqC,OAANpC,EAAM,UAEvFqC,OAAM,SAAAL,G,IAAGjC,EAAQiC,EAARjC,SAAUC,EAAKgC,EAALhC,MACjBiC,EAAArC,GAASsC,OAAOI,QAAQ,wBAAuCF,OAAfrC,EAAS,QAAYqC,OAANpC,EAAM,UAEtEyB,GAAWG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  inputDelay: document.getElementsByName('delay'),\n  inputStep: document.getElementsByName('step'),\n  inputAmount: document.getElementsByName('amount'),\n  submitBtn: document.querySelector(\"button\"),\n};\n\nrefs.form.addEventListener('submit', onSubmitFormEvent);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n           resolve({position, delay});\n      } else {\n         reject({position, delay});\n      }\n    }, delay);\n  });\n};\n\nfunction onSubmitFormEvent(evt) {\n  evt.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n  let elDelay = Number(delay.value);\n  let elStep = Number(step.value);\n  let elAmount = Number(amount.value);\n  for (let position = 1; position <= elAmount; position += 1) {\n    createPromise(position, elDelay)\n      .then(({ position, delay }) => {\n     Notiflix.Notify.success(`:white_check_mark: Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`:x: Rejected promise ${position} in ${delay}ms`);\n  });\n    elDelay += elStep;\n  }\n};\n\nfunction preventDefault(event) {\n  event.preventDefault();\n};\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","inputDelay","getElementsByName","inputStep","inputAmount","submitBtn","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","elDelay","Number","value","elStep","elAmount","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.073beb77.js.map"}