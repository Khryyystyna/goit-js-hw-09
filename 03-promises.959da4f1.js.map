{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAYA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACCF,EAAQ,C,SAACH,E,MAAUC,IAErBG,EAAO,C,SAACJ,E,MAAUC,MAEpBA,OAnBM,CACXQ,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASG,kBAAkB,SACvCC,UAAWJ,SAASG,kBAAkB,QACtCE,YAAaL,SAASG,kBAAkB,UACxCG,UAAWN,SAASC,cAAc,YAG/BF,KAAKQ,iBAAiB,UAe3B,SAA2BC,GACzBA,EAAIC,iBACJ,IACEC,UAAYnB,MAAAoB,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAIM,cACJC,EAAUC,OAAOL,EAAMM,OACvBC,EAASF,OAAOJ,EAAKK,OACrBE,EAAWH,OAAOH,EAAOI,OAC7B,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAUC,GAAY,EACvD/B,EAAc+B,EAAUL,GACrBM,MAAK,EAAC/B,SAAEA,EAAQC,MAAEA,MACpB+B,EAAAnC,GAASoC,OAAOC,QAAQ,wCAAwClC,QAAeC,UAEjFkC,OAAM,EAACnC,SAAEA,EAAQC,MAAEA,MACjB+B,EAAAnC,GAASoC,OAAOG,QAAQ,wBAAwBpC,QAAeC,UAEhEwB,GAAWG","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  inputDelay: document.getElementsByName('delay'),\n  inputStep: document.getElementsByName('step'),\n  inputAmount: document.getElementsByName('amount'),\n  submitBtn: document.querySelector(\"button\"),\n};\n\nrefs.form.addEventListener('submit', onSubmitFormEvent);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n           resolve({position, delay});\n      } else {\n         reject({position, delay});\n      }\n    }, delay);\n  });\n};\n\nfunction onSubmitFormEvent(evt) {\n  evt.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n  let elDelay = Number(delay.value);\n  let elStep = Number(step.value);\n  let elAmount = Number(amount.value);\n  for (let position = 1; position <= elAmount; position += 1) {\n    createPromise(position, elDelay)\n      .then(({ position, delay }) => {\n     Notiflix.Notify.success(`:white_check_mark: Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`:x: Rejected promise ${position} in ${delay}ms`);\n  });\n    elDelay += elStep;\n  }\n};\n\nfunction preventDefault(event) {\n  event.preventDefault();\n};\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","inputDelay","getElementsByName","inputStep","inputAmount","submitBtn","addEventListener","evt","preventDefault","elements","delay1","step","amount","currentTarget","elDelay","Number","value","elStep","elAmount","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.959da4f1.js.map"}