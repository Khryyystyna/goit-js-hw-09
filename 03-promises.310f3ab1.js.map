{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASG,kBAAkB,SACvCC,UAAWJ,SAASG,kBAAkB,QACtCE,YAAaL,SAASG,kBAAkB,UAIxCG,UAAWN,SAASC,cAAc,WA0BpC,SAASM,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACCF,EAAQ,C,SAACH,E,MAAUC,IAErBG,EAAO,C,SAACJ,E,MAAUC,MAEpBA,MAhCPX,EAAKC,KAAKkB,iBAAiB,UAE3B,WAkBEC,EAAMC,iBADR,IAAwBD,EAftB,IAAIE,EAAgB,EACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAOxB,EAAKO,YAAYkB,OAAQF,GAAK,EAAG,CAC1DD,GAAiB,EACjB,MAAMI,EAAiBF,OAAOxB,EAAKI,WAAWqB,OAASD,OAAOxB,EAAKM,UAAUmB,OAE7EhB,EAAca,EAAeI,GAC1BC,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACpBiB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,UAEhEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoBtB,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  inputDelay: document.getElementsByName('delay'),\n  inputStep: document.getElementsByName('step'),\n  inputAmount: document.getElementsByName('amount'),\n  // inputDelay: document.querySelector('input.delay'),\n  // inputStep: document.querySelector('input.step'),\n  // inputAmount: document.querySelector('input.amount'),\n  submitBtn: document.querySelector(\"button\"),\n};\n\nrefs.form.addEventListener('submit', onSubmitFormEvent);\n\nfunction onSubmitFormEvent() {\n  preventDefault();\n  let numOfPosition = 0;\n  for (let i = 0; i < Number(refs.inputAmount.value); i += 1) {\n    numOfPosition += 1;\n    const deleyStepCount = Number(refs.inputDelay.value) - Number(refs.inputStep.value);\n\n    createPromise(numOfPosition, deleyStepCount)\n      .then(({ position, delay }) => {\n     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n};\n\nfunction preventDefault(event) {\n  event.preventDefault();\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n           resolve({position, delay});\n      } else {\n         reject({position, delay});\n      }\n    }, delay);\n  });\n};\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","inputDelay","getElementsByName","inputStep","inputAmount","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","numOfPosition","i","Number","value","deleyStepCount","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.310f3ab1.js.map"}